#page-landing {
    width: 100vw;
    height: 100vh;

    display: flex; /* Usado para permitir alinhar o conteúdo no centro */
    justify-content: center;
    align-items: center;

    color: var(--color-text-in-primary); /* Cor das fontes */
    background: var(--color-primary);
}

.logo-container img{
    height: 10rem; /* Diminui a logo-container */
}

.hero-image {
    width: 100%; /* Faz com que a imagem não sobressaia a página crianda barra de rolamento pros lados */
}

.logo-container {
    text-align: center;
    margin-bottom: 3.2rem;
}

.logo-container h2 {
    font-weight: 500; /* Pq por padrão os h1, h2, h3 etc. são setados em negrito com o tamanho 700 */
    font-size: 2.4rem;
    line-height: 4.6rem;
    margin-top: 0.8rem;
}

.buttons-container {
    display: flex;
    justify-content: center;
    margin: 3.2rem 0; /* 3.2rem em cima e em baixo e 0 nas laterais */
}

.buttons-container a {
    width: 30rem;
    height: 10.4rem;
    border-radius: 0.8rem;
    font: 700 2.0rem Archivo; /*700 é pra deixar em negrito, 2.0rem é o tamanho e Archivo é o nome da fonte */

    display: flex; /* Alinhando os ícones e textos ao centro */
    align-items: center; /* Alinha na vertical */
    justify-content: center; /* E aqui alinha na horizontal */

    text-decoration: none; /* Tira o underline do texto do botão */
    color: var(--color-button-text);

    transition: background-color 0.2s; /* Define que a cor do botão ao passar o mouse em cima, mude durante 0.2 segundos */
}

.buttons-container a:first-child {
    margin-right: 1.6rem; /* É aplicado apenas ao primeiro botão da classe */
}

.buttons-container a img {
    width: 4rem; /* Diminuindo o tamanho do ícone */
    margin-right: 2.4rem; /* Distanciando o ícone do text */
}

.buttons-container a.study {
    background: var(--color-primary-lighter);
}

.buttons-container a.give-classes {
    background: var(--color-secundary);
}

.buttons-container a.study:hover { /* O hover define o que acontece quando passamos o mouse por cima da área em questão */
    background: var(--color-primary-light);
}

.buttons-container a.give-classes:hover {
    background: var(--color-secundary-dark);
}

.total-connections {
    font-size: 1.4rem; /* Aumentando a fonte */
    
    display: flex; /* Alinhando o texto e o ícone do coração */
    align-items: center;
    justify-content: center;
}

.total-connections img{
    margin-left: 0.8rem; /* Distanciando o ícone do coração do resto do texto */
}

/* =========== Iniciando a responsividade para telas desktop  ================*/
@media (min-width: 1100px) { /* Aplica-se quando a tela usada tiver pelo menos 1100px */
    #page-landing-content { /* Usa o id do page-landing-content pq assim sobrescreverá o que foi aplicado para a classe .container no global.css */
        max-width: 1100px;
        
        display: grid;
        grid-template-rows: 350px 1fr; /* Define duas linhas, sendo que a primeira ocupa 350px e a segunda ocupa o restante*/
        grid-template-columns: 2fr 1fr 1fr; /* Define 3 colunas. Aqui, a primeira ocupa metade do grid (2fr por ser a metade da soma que é igual a 4). A segunda coluna é só um espaçamento a mais para distanciar do texto, que fica na terceira coluna */
        grid-template-areas:  /* Define que elemento vai ficar em cada região da grid. A atribuições de cada elemento será feita abaixo */
            "logo hero hero"
            "buttons buttons total"
        ;
    }

    .logo-container { 
        grid-area: logo; /* Atribuições de cada elemento utilizado no grid */
        align-self: center; /* Usa esse align pq a logo tava alinhada ao topo por padrão. E utiliza align-self ao invés de align-items pq pra isso precisaria do display flex, mas já estamos usando display grid */
        margin: 0; /* Tira a margem que existia no formato mobile */
        text-align: left;
    }

    .logo-container h2 {
        text-align: initial; /* Coloca o texto todo pra esquerda */
        font-size: 3.6rem; /* Aumenta a fonte */
    }

    .logo-container img {
        height: 100%; /* Para que a imagem da logo ocupe o máximo possível da sua região no grid*/
    }

    .hero-image {
        grid-area: hero; /* Atribuições de cada elemento utilizado no grid */
        justify-self: end; /* Garante que a imagem hero esteja totalmente pra direita no seu bloco do grid*/
    }

    .buttons-container {
        grid-area: buttons; /* Atribuições de cada elemento utilizado no grid */
        justify-content: flex-start; /* Para que os botões iniciem no início da grid */
    }

    .buttons-container a {
        font-size: 2.4rem;
    }

    .total-connections {
        grid-area: total; /* Atribuições de cada elemento utilizado no grid */
        justify-self: end;
    }
}

